// <auto-generated />
using System;
using EmailExtractor.DatabaseModel;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EmailExtractor.Migrations
{
    [DbContext(typeof(MailExtractorContext))]
    [Migration("20190212164557_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0-preview.19074.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EmailExtractor.DatabaseModel.MailItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Domain");

                    b.Property<string>("EmailAddress")
                        .IsRequired();

                    b.Property<string>("Folder")
                        .IsRequired();

                    b.Property<string>("FullName");

                    b.Property<DateTimeOffset>("MessageDateTime");

                    b.Property<string>("MessageEml");

                    b.Property<string>("Server")
                        .IsRequired();

                    b.Property<long>("UniqueId");

                    b.HasKey("Id");

                    b.HasIndex("EmailAddress");

                    b.HasIndex("EmailAddress", "Folder", "UniqueId", "Server")
                        .IsUnique();

                    b.ToTable("MailItems");
                });
#pragma warning restore 612, 618
        }
    }
}
